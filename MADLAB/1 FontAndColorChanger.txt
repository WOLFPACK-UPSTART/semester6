XML:

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    android:gravity="center">

    <!-- TextView to display text -->
    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!"
        android:textSize="24sp"
        android:textColor="#000000"
        android:layout_marginBottom="32dp"
        android:layout_marginTop="32dp"
        android:gravity="center"/>

    <!-- Button to change font -->
    <Button
        android:id="@+id/btnChangeFont"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Change Font"
        android:layout_marginBottom="16dp"/>

    <!-- Button to change color -->
    <Button
        android:id="@+id/btnChangeColor"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Change Color"/>

</LinearLayout>


Java:

package com.example.fontandcolorchanger;

import android.graphics.Color;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
import android.graphics.Typeface;

public class MainActivity extends AppCompatActivity {

    private TextView textView;
    private Button btnChangeFont, btnChangeColor;

    // Boolean to track the current font state
    private boolean isFontChanged = false;

    // Boolean to track the current color state
    private boolean isColorChanged = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Initialize the TextView and Buttons
        textView = findViewById(R.id.textView);
        btnChangeFont = findViewById(R.id.btnChangeFont);
        btnChangeColor = findViewById(R.id.btnChangeColor);

        // Set OnClickListener for btnChangeFont
        btnChangeFont.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Toggle the font style
                if (isFontChanged) {
                    // Change back to default font (Roboto - sans-serif)
                    textView.setTypeface(Typeface.SANS_SERIF); // Default system font
                } else {
                    // Change to serif font
                    textView.setTypeface(Typeface.SERIF); // Serif system font
                }
                // Toggle the font state
                isFontChanged = !isFontChanged;
            }
        });

        // Set OnClickListener for btnChangeColor
        btnChangeColor.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Toggle the text color
                if (isColorChanged) {
                    // Change back to default color (Black)
                    textView.setTextColor(Color.BLACK);
                } else {
                    // Change to red color
                    textView.setTextColor(Color.RED);
                }
                // Toggle the color state
                isColorChanged = !isColorChanged;
            }
        });
    }
}
