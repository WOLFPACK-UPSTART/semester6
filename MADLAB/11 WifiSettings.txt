<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    android:padding="16dp">

    <!-- Button to Turn Wi-Fi On -->
    <Button
        android:id="@+id/buttonTurnOnWifi"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Turn Wi-Fi On"
        android:textAllCaps="false"
        android:layout_marginBottom="16dp" />

    <!-- Button to Turn Wi-Fi Off -->
    <Button
        android:id="@+id/buttonTurnOffWifi"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Turn Wi-Fi Off"
        android:textAllCaps="false" />
</LinearLayout>


Java:

package com.example.wifisettings;

import android.content.Context;
import android.content.Intent;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.os.Bundle; // Make sure you import Bundle here
import android.provider.Settings;
import android.widget.Button;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;  // Ensure you're using AppCompatActivity

public class MainActivity extends AppCompatActivity {

    private WifiManager wifiManager;
    private Button turnOnWifiButton, turnOffWifiButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {  // Correct method signature
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Initialize WifiManager
        wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);

        // Check if Wi-Fi is supported on the device
        if (wifiManager == null) {
            Toast.makeText(this, "Wi-Fi is not supported on this device", Toast.LENGTH_LONG).show();
            return;
        }

        // Get references to the buttons
        turnOnWifiButton = findViewById(R.id.buttonTurnOnWifi);
        turnOffWifiButton = findViewById(R.id.buttonTurnOffWifi);

        // Set click listeners for the buttons
        turnOnWifiButton.setOnClickListener(v -> turnOnWifi());
        turnOffWifiButton.setOnClickListener(v -> turnOffWifi());
    }

    private void turnOnWifi() {
        if (!wifiManager.isWifiEnabled()) {
            wifiManager.setWifiEnabled(true);  // Turn Wi-Fi on
            Toast.makeText(this, "Wi-Fi is now ON", Toast.LENGTH_SHORT).show();
        } else {
            Toast.makeText(this, "Wi-Fi is already ON", Toast.LENGTH_SHORT).show();
        }
    }

    private void turnOffWifi() {
        // For Android 10 and above, we cannot directly turn off Wi-Fi programmatically
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
            // Open Wi-Fi settings to let the user toggle Wi-Fi off manually
            Intent intent = new Intent(Settings.ACTION_WIFI_SETTINGS);
            startActivity(intent);
            Toast.makeText(this, "Opening Wi-Fi settings", Toast.LENGTH_SHORT).show();
        } else {
            if (wifiManager.isWifiEnabled()) {
                wifiManager.setWifiEnabled(false);  // Turn Wi-Fi off for lower Android versions
                Toast.makeText(this, "Wi-Fi is now OFF", Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(this, "Wi-Fi is already OFF", Toast.LENGTH_SHORT).show();
            }
        }
    }
}<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />


    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.WifiSettings"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>


Manifest:

